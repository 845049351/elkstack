### INPUTS
input {

    kafka  {
      codec => "json"
      topics_pattern => "elk-.*"
      bootstrap_servers => "your.kafka.cluster.node.1:9092,your.kafka.cluster.node.2:9092"
      auto_offset_reset => "latest"
      group_id => "logstash-g1"
    }

}


### FILTERS
filter {
  grok {
    #获取 Nginx 日志字段
    match => {
      "message" => [
        #Nginx access log 格式
          '%{IPV4:clientip} - (?:%{USERNAME}|-) \[%{HTTPDATE:[@metadata][timestamp]}\] %{WORD:method} %{URIPATHPARAM:request} HTTP/%{NUMBER} "%{NUMBER:response_code}" (?:%{NUMBER:bytes}|-) (?:%{NUMBER:response_time}|-) "(?:%{URI:http_referer}|-)" %{QS:agent}'
      ]
    }
    
    #减少冗余数据
    remove_field => [ "message" ]
  }


  #通用 Nginx 访问日志
  if [request] {

      #获取 日志 时间
      date { match => [ "[@metadata][timestamp]", "dd/MMM/yyyy:HH:mm:ss Z" ] }
      mutate {
        #转换数据类型
        convert => [
          "response_code" , "integer",
              "bytes" , "integer",
              "response_time", "float"
          ]
      }
        
      #获取 参数
      ruby {
          init => "@kname = ['url_path','url_args']"
          code => "
            new_event = LogStash::Event.new(Hash[@kname.zip(event.get('request').split('?'))])
            new_event.remove('@timestamp')
            event.append(new_event)
            "
      }
		
      if [url_path] =~ /\.js|css|jpeg|jpg|png|gif|ico|swf$/ {
        drop {}
      }

      if [url_args] {
        kv {
              prefix => "url_param_"
              source => "url_args"
              field_split => "&"

              #只存储感兴趣参数
              #include_keys => [ "uid", "vn" ]
              remove_field => [ "url_args" ]
          }
      }else{
        mutate {
          #减少冗余数据
          remove_field => [ "url_args" ]
        }
      }

      #url 解码
      urldecode {
        all_fields => true
      }

  }else{

    #忽略其他请求
    #drop {}
  }
}


### OUTPUTS
output {

  elasticsearch {
    hosts => ["your.es.cluser.node.1:9200","your.es.cluser.node.2:9200"]
    index => "logstash-%{type}-%{+YYYY.MM.dd}"
  }

  #stdout { codec => rubydebug }
    
}
